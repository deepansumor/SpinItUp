!function(t,s){"object"==typeof exports&&"object"==typeof module?module.exports=s():"function"==typeof define&&define.amd?define([],s):"object"==typeof exports?exports.SpinItUp=s():t.SpinItUp=s()}(this,(()=>(()=>{"use strict";var t={d:(s,i)=>{for(var e in i)t.o(i,e)&&!t.o(s,e)&&Object.defineProperty(s,e,{enumerable:!0,get:i[e]})},o:(t,s)=>Object.prototype.hasOwnProperty.call(t,s),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},s={};t.r(s),t.d(s,{default:()=>i});class i{constructor(t,s={}){if(!(t instanceof HTMLElement))throw new Error("Element is not a valid HTMLElement");if(this.elem=t,this.states={SPINNING:"spinning",STOPPED:"stopped",FINISHED:"finished",ERROR:"error"},this.options={spins:2,easing:"linear",callback:(t,s)=>console.log(t,s),segments:Array.from({length:6},((t,s)=>({segment:s+1}))),stopAt:null,direction:"clockwise",rotate:0,...s},!this.options.segments[this.options.stopAt-1])throw new Error(`stopAt must be a valid Number within the segments array 1 - ${this.options.segments.length}`);this.directions=["clockwise","anti-clockwise"],this.options.duration=this.options.duration,this.state=this.states.STOPPED,this.style(),this.options.rotate=+this.options.rotate||0,this.elem.style.transform=`rotate(${this.options.rotate}deg)`}updateStopAngle(){const t=360/this.options.segments.length;this.stopAngle=this.minMax(this.options.stopAt*t-t+10,this.options.stopAt*t-10)}minMax(t,s){return Math.floor(Math.random()*(s-t+1)+t)}style(){this.updateStopAngle();let t=360*this.options.spins;if(this.directions.includes(this.options.direction)||(this.options.direction="clockwise"),"random"===this.options.direction){const t=Math.floor(Math.random()*this.directions.length);this.options.direction=this.directions[t]}"clockwise"===this.options.direction?t+=360-this.stopAngle:"anti-clockwise"===this.options.direction&&(t=-(t+this.stopAngle)),this.options.speed=t/this.options.duration,this.spinAnimationKey=`spin-${Math.random().toString(36).substring(7)}`;const s=document.createElement("style");s.innerHTML=`\n            @keyframes ${this.spinAnimationKey} {\n                100% { transform: rotate(${t}deg); }\n            }\n        `,document.head.appendChild(s)}async start(){if(this.state!==this.states.STOPPED)return this.callback(this.state,{message:"Wheel is already spinning"});this.state=this.states.SPINNING,this.#t()}#t(){this.style(),this.callback(this.state),this.elem.style.animation=`${this.spinAnimationKey} ${this.options.duration}ms ${this.options.easing} 1 forwards`,setTimeout((()=>this.stop()),this.options.duration)}stop(){if(this.state!==this.states.SPINNING)return this.callback(this.state,{message:"Cannot stop; wheel is not spinning"});this.state=this.states.FINISHED,this.callback(this.state,{segment:this.getWinningSegment()})}reset(){this.state=this.states.STOPPED,this.elem.style.animation="none",this.callback(this.state)}getWinningSegment(){return this.options.segments[this.options.stopAt-1]}callback(t,s={}){"function"==typeof this.options.callback&&this.options.callback(t,{...s,timestamp:Date.now()})}}return s})()));